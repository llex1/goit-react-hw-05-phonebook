{"version":3,"sources":["App/components/ContactForm/ContactForm.module.css","App/components/Filter/Filter.module.css","App/components/ContactForm/ContactForm.jsx","App/components/Filter/Filter.jsx","App/components/ContactList/ContactList.jsx","App/data/phoneBook.js","App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","contactName","value","contactNumber","handleChange","event","setState","target","name","handleSubmit","props","addContact","className","styles","onSubmit","this","htmlFor","type","id","onChange","Component","Filter","inputValue","enableFilter","filterContact","filterForm","ContactList","data","deleteContact","TransitionGroup","component","map","el","i","CSSTransition","timeout","classNames","number","onClick","contacts","filter","alert","App","phoneBookState","preventDefault","includes","setTimeout","newContact","uuid","findElement","indexOfFindElement","indexOf","newContactArray","splice","length","findElement_F","indexOfFindElement_F","newContactArray_F","filterElement","toLowerCase","Object","keys","localStorage","getItem","JSON","parse","setItem","stringify","dataOut","in","appear","unmountOnExit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71de7a13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContact\":\"ContactForm_addContact__2Wxpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"Filter_filterForm__2R9aY\"};","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    contactName: {\n      value: \"\",\n    },\n    contactNumber: {\n      value: \"\",\n    },\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: {\n        value: event.target.value,\n      },\n    });\n  };\n\n  handleSubmit = (event) => {\n    this.setState({\n      contactName: {\n        value: \"\",\n      },\n      contactNumber: {\n        value: \"\",\n      },\n    });\n    this.props.addContact(event);\n  };\n\n  render() {\n    return (\n      <form className={styles.addContact} onSubmit={this.handleSubmit}>\n        <label htmlFor=\"contactName\">Name</label>\n        <input\n          type=\"text\"\n          name=\"contactName\"\n          id=\"contactName\"\n          onChange={this.handleChange}\n          value={this.state.contactName.value}\n        />\n        <label htmlFor=\"contactNumber\">Number</label>\n        <input\n          type=\"text\"\n          name=\"contactNumber\"\n          id=\"contactNumber\"\n          onChange={this.handleChange}\n          value={this.state.contactNumber.value}\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React, { Component } from \"react\";\nimport styles from \"./Filter.module.css\";\n\nclass Filter extends Component {\n  state = {\n    inputValue: \"\",\n  };\n  enableFilter = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n    this.props.filterContact(event.target.value);\n  };\n\n  render() {\n    return (\n      <div className={styles.filterForm}>\n        <label htmlFor=\"findContact\">Find contacts by name</label>\n        <input\n          type=\"text\"\n          name=\"findContact\"\n          id=\"findContact\"\n          value={this.state.inputValue}\n          onChange={this.enableFilter}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n// import styles from \"./ContactList.module.css\";\nimport \"./ContactList.css\";\n\nfunction ContactList({ data, deleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\" className=\"contactList\">\n      {data.map((el, i) => {\n        return (\n          <CSSTransition key={i} timeout={250} classNames=\"contactListItem\">\n          <li className=\"contactListItem\" key={el.id}>\n            `${el.name} : ${el.number}$ `\n            <button id={el.id} onClick={deleteContact}>\n              delete\n            </button>\n          </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n}\n\nexport default ContactList;\n","const state = {\n  contacts: [],\n  filter: '',\n  alert: false\n}\n\nexport default state","import React, { Fragment, Component } from \"react\";\nimport {CSSTransition} from \"react-transition-group\"\nimport { v4 as uuid } from \"uuid\";\n\n//jsx modules\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\n//states\nimport phoneBookState from \"./data/phoneBook\";\n\n// css\nimport \"./App.css\";\n\nclass App extends Component {\n  state = phoneBookState;\n\n  componentDidMount() {\n    this.setState((state) => {\n      if (localStorage.getItem(\"contacts\")) {\n        return {\n          contacts: [...JSON.parse(localStorage.getItem(\"contacts\"))],\n        };\n      } else {\n        return {\n          contacts: [],\n        };\n      }\n    });\n  }\n  componentDidUpdate() {\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  }\n\n  addContact = (event) => {\n    event.preventDefault();\n    const currentContacts = this.state.contacts.map((el) => el.name);\n    if (currentContacts.includes(event.target.contactName.value)) {\n      this.setState((state)=>{\n        return {\n          alert: true\n        }\n      })\n      setTimeout(()=>{\n        this.setState((state)=>{\n          return {\n            alert: false\n          }\n        })\n      }, 4000)\n      // alert(\"Такий контакт вже існує!\");\n    } else {\n      this.setState((state) => {\n        const newContact = [\n          {\n            id: uuid(),\n            name: event.target.contactName.value,\n            number: event.target.contactNumber.value,\n          },\n        ];\n        return {\n          contacts: [...state.contacts, ...newContact],\n        };\n      });\n    }\n  };\n  deleteContact = (event) => {\n    const findElement = this.state.contacts.filter(\n      (el) => el.id === event.target.id\n    );\n    const indexOfFindElement = this.state.contacts.indexOf(findElement[0]);\n    const newContactArray = [...this.state.contacts];\n    newContactArray.splice(indexOfFindElement, 1);\n    this.setState((state) => {\n      return {\n        contacts: [...newContactArray],\n      };\n    });\n    //аналогічно для фільтра, якщо він не пустий\n    if (this.state.filter.length) {\n      const findElement_F = this.state.filter.filter(\n        (el) => el.id === event.target.id\n      );\n      const indexOfFindElement_F = this.state.filter.indexOf(findElement_F[0]);\n      const newContactArray_F = [...this.state.filter];\n      newContactArray_F.splice(indexOfFindElement_F, 1);\n      this.setState((state) => {\n        return {\n          filter: [...newContactArray_F],\n        };\n      });\n    }\n  };\n\n  filterContact = (inputValue) => {\n    const filterElement = this.state.contacts.filter((el) =>\n      el.name.toLowerCase().includes(inputValue.toLowerCase())\n    );\n    if (inputValue && !Object.keys(filterElement).length) {\n      this.setState((state) => {\n        return {\n          filter: -1,\n        };\n      });\n    } else {\n      this.setState((state) => {\n        return {\n          filter: [...filterElement],\n        };\n      });\n    }\n  };\n\n  render() {\n    let dataOut;\n    if (typeof this.state.filter === \"number\") {\n      dataOut = <p className=\"filterAlert\">пошук не дав результатів</p>;\n    } else {\n      dataOut = (\n        <ContactList\n          data={\n            this.state.filter.length > 0\n              ? this.state.filter\n              : this.state.contacts\n          }\n          deleteContact={this.deleteContact}\n        />\n      );\n    }\n\n    return (\n      <Fragment>\n        <CSSTransition in={true} appear={true} classNames=\"logo\" timeout={500} unmountOnExit>\n        <h1>Phonebook</h1>\n        </CSSTransition>\n        <CSSTransition in={this.state.alert}  classNames=\"alert\" timeout={250} unmountOnExit>\n        <div className=\"alert\">Такий контакт вже існує!</div>\n        </CSSTransition>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filterContact={this.filterContact} />\n        {dataOut}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}